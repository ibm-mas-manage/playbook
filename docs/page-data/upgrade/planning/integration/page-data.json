{"componentChunkName":"component---src-pages-upgrade-planning-integration-mdx","path":"/upgrade/planning/integration/","result":{"pageContext":{"frontmatter":{"title":"Integration"},"relativePagePath":"/upgrade/planning/integration.mdx","titleType":"append","MdxNode":{"id":"24a46563-590a-50a2-9382-f42fa3175fa7","children":[],"parent":"f1f424c8-8e34-5f44-bcc1-fef79b51e611","internal":{"content":"---\ntitle: Integration\n---           \n\nThe API Key authentication is required for inbound HTTP/SOAP/REST-based integration to Manage. \n- The API Key needs be generated from the Administration Work Center.\n- The HTTP request header must include the API Key.\n- No other authentication including native authentication is supported. \n## Messaging Queues\nMigrate to Kafka or another supported provider (JMS 1.1) is required.\n### JMS Provider\n- Install/Provision/configure JMS provider (for example IBM MQ).\n- Register the JMS provider queues in Manage.\n- Associate the registered queues with the External Systems application. \n- The queues and connection factories needs be registered in Manage in the server.xml file (Liberty) for the JMS provider. Follow the [Liberty documentation](https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/twlp_msg.html) for setup.\n\n![image](images/jms.png)\n\n  ### Kafka\n  - Install/Provision/configure Kafka.\n  - Register Kafka as a messaging provider in Manage. \n  - Register Kafka topics in Manage.\n  - Associate the registered topics with the External Systems application. \n  - Kafka information link: [Kafka providers](https://www.ibm.com/support/knowledgecenter/SSLKT6_7.6.1.2/com.ibm.mif.doc/providers/c_mssg_providers_op.html)\n  - There is no text support for Kafka in the initial release. Only byte messages are supported. JMS supports both (text and byte).\n\n![image](images/kafka.png)\n <p></p> \n\n\n- If already using a supported JMS provider (for example MQ).\n  - The queues and connection factories should be registered in server.xml in Liberty server deployment using the same JNDI name as registered in the Manage.\n- The upgrade process will not move your current JMS integration messages. All messages in the queue and error table need to be processed and cleared before the upgrade.\n- File loading folders should be processed before the upgrade and will not be moved.\n    - You need to configure a volume mount during deployment.\n- Web Services using SOAP 1.1 and 1.2 are supported.\n\n## Moving from JMS to Kafka\n- For customers moving from JMS queues to Kafka, the message processing functionality is similar but there are some are some differences. Most of the following items are discussed in more detail in [Kafka](../kafka) page in this document.\n   - Kafka message in Manage is always bytes, no option for text.\n   - Kafka message is always compressed.\n   - Kafka message size limit is configured in the Kafka server and with a Manage System Property.\n   - Kafka messages are not deleted when processed, they are removed from queue based on retention time.\n   - Continuous message consumption is done by Manage CRON tasks, not MDBs.\n   - Browsing messages (View Queue) in a queue is done using a REST API.\n\n## Remote Method Invocation (RMI) is replaced by REST API.\n- RMI is not supported outside of the Maximo server process.\n   - Security issues to the containers to open RMI ports.\n   - Networking issues with K8s services and routes redirecting to RMI ports.\n- Recommend customers to leverage Maximo REST APIs instead of RMI.\n   - Maximo REST API follow open standards and are more secure and can be scaled.\n   - Use of REST API with standard HTTP/s protocol helps make the client code language agnostic.\n   - For REST APIs the Maximo API Key is used for authentication.\n### RMI to Rest API \nhttps://ibm.box.com/s/mhk4nnw2ps5sl0sp1eh656y44f4jczu4\n","type":"Mdx","contentDigest":"d3aec21456ae8208ad0f962b2653ccf2","owner":"gatsby-plugin-mdx","counter":166},"frontmatter":{"title":"Integration"},"exports":{},"rawBody":"---\ntitle: Integration\n---           \n\nThe API Key authentication is required for inbound HTTP/SOAP/REST-based integration to Manage. \n- The API Key needs be generated from the Administration Work Center.\n- The HTTP request header must include the API Key.\n- No other authentication including native authentication is supported. \n## Messaging Queues\nMigrate to Kafka or another supported provider (JMS 1.1) is required.\n### JMS Provider\n- Install/Provision/configure JMS provider (for example IBM MQ).\n- Register the JMS provider queues in Manage.\n- Associate the registered queues with the External Systems application. \n- The queues and connection factories needs be registered in Manage in the server.xml file (Liberty) for the JMS provider. Follow the [Liberty documentation](https://www.ibm.com/support/knowledgecenter/SSEQTP_liberty/com.ibm.websphere.wlp.doc/ae/twlp_msg.html) for setup.\n\n![image](images/jms.png)\n\n  ### Kafka\n  - Install/Provision/configure Kafka.\n  - Register Kafka as a messaging provider in Manage. \n  - Register Kafka topics in Manage.\n  - Associate the registered topics with the External Systems application. \n  - Kafka information link: [Kafka providers](https://www.ibm.com/support/knowledgecenter/SSLKT6_7.6.1.2/com.ibm.mif.doc/providers/c_mssg_providers_op.html)\n  - There is no text support for Kafka in the initial release. Only byte messages are supported. JMS supports both (text and byte).\n\n![image](images/kafka.png)\n <p></p> \n\n\n- If already using a supported JMS provider (for example MQ).\n  - The queues and connection factories should be registered in server.xml in Liberty server deployment using the same JNDI name as registered in the Manage.\n- The upgrade process will not move your current JMS integration messages. All messages in the queue and error table need to be processed and cleared before the upgrade.\n- File loading folders should be processed before the upgrade and will not be moved.\n    - You need to configure a volume mount during deployment.\n- Web Services using SOAP 1.1 and 1.2 are supported.\n\n## Moving from JMS to Kafka\n- For customers moving from JMS queues to Kafka, the message processing functionality is similar but there are some are some differences. Most of the following items are discussed in more detail in [Kafka](../kafka) page in this document.\n   - Kafka message in Manage is always bytes, no option for text.\n   - Kafka message is always compressed.\n   - Kafka message size limit is configured in the Kafka server and with a Manage System Property.\n   - Kafka messages are not deleted when processed, they are removed from queue based on retention time.\n   - Continuous message consumption is done by Manage CRON tasks, not MDBs.\n   - Browsing messages (View Queue) in a queue is done using a REST API.\n\n## Remote Method Invocation (RMI) is replaced by REST API.\n- RMI is not supported outside of the Maximo server process.\n   - Security issues to the containers to open RMI ports.\n   - Networking issues with K8s services and routes redirecting to RMI ports.\n- Recommend customers to leverage Maximo REST APIs instead of RMI.\n   - Maximo REST API follow open standards and are more secure and can be scaled.\n   - Use of REST API with standard HTTP/s protocol helps make the client code language agnostic.\n   - For REST APIs the Maximo API Key is used for authentication.\n### RMI to Rest API \nhttps://ibm.box.com/s/mhk4nnw2ps5sl0sp1eh656y44f4jczu4\n","fileAbsolutePath":"/home/travis/build/maximo/manage-playbook/src/pages/upgrade/planning/integration.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}